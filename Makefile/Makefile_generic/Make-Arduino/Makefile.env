#======================================================================
# 	compiler and linker, absolute
XTENSA_BASE		= $(HOME)/.arduino15/packages/esp8266/tools/xtensa-lx106-elf-gcc/2.5.0-4-b40a506/bin
XTENSA_PATH		= $(XTENSA_BASE)/
CC 				= $(XTENSA_BASE)/xtensa-lx106-elf-gcc
CXX 			= $(XTENSA_BASE)/xtensa-lx106-elf-g++
AR 				= $(XTENSA_BASE)/xtensa-lx106-elf-ar

#======================================================================
# select which tools to use as compiler, 
# librarian and linker
#======================================================================
# 		CFLAGS

# CFLAGS	+= -std=c99 
# CFLAGS 	+= -Wall -O1 -Os
# CFLAGS	+= -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums

CFLAGS		+= $(addprefix -I,$(ROOT_BASE))
CFLAGS		+= $(addprefix -I,$(PRJ_BASE))

# 		CFLAGS
# CXXFLAGS	+= -std=c++11
CXXFLAGS	+= $(addprefix -I,$(ROOT_BASE))
CXXFLAGS	+= $(addprefix -I,$(PRJ_BASE))
#======================================================================
# select which tools to use as compiler, librarian and linker
#======================================================================
LDFLAGS		= -nostdlib -Wl,--no-check-sections -u call_user_start -Wl,-static
LDFLAGS		+= -static -Wl,-Map -Wl,--cref
#======================================================================
# select which tools to use as , librarian and linker
CCX_FLAG	:= $(suffix $(PRJ_TEST_SRC_CPP))

ifeq ($(CCX_FLAG), .cpp)
	CCX := g++
	CCXFLAGS := CXXFLAGS
else
	CCX := gcc
	CCXFLAGS := CFLAGS
endif

#======================================================================
all: checkdirs build

build: checkdirs build-dep build-obj build-ar build-eagle build-elf

build-obj: $(PRJ_OBJ_C) $(PRJ_OBJ_CPP) $(TEST_OBJ_C) $(TEST_OBJ_CPP)
$(BUILD_BASE)/%.o: %.c
	$(CC) $(CFLAGS) $(MLD_INC) -c $< -o $@

$(BUILD_BASE)/%.o: %.cpp
	$(CXX) $(CXXFLAGS) $(MLD_INC) -c $< -o $@	

build-dep: $(PRJ_DEP_C) $(PRJ_DEP_CPP)

build-ar: $(PRJ_AR_FILE)
# build .a
$(BUILD_BASE)/%.a: $(PRJ_OBJ_C) $(PRJ_OBJ_CPP)
	$(AR) cru $@ $^

build-eagle: $(PRJ_EAGLE_DES)
$(PRJ_EAGLE_DES):
	$(CC) $(PRJ_EAGLE_FLAG) $(PRJ_EAGLE_SRC) -o $(PRJ_EAGLE_DES)

build-elf:
	$(CC) $(SDK_LIB_DIR) $(LD_SCRIPT) $(LDFLAGS) -Wl,--start-group $(SDK_LIB) $(PRJ_AR_FILE) -Wl,--end-group -o $(PRJ_ELF_FILE)

checkdirs: $(BUILD_DIR) $(BUILD_TEST_DIR)
$(BUILD_DIR):
	@$(MKDIR) $@

$(BUILD_TEST_DIR):
	@$(MKDIR)  $@

clean:
	@$(RMDIR) $(BUILD_BASE)